МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 3 з дисципліни
скриптові мови програмування





Виконала:                                                                         Перевірив:
ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІ
Самосватова А. Р.						Сокорчук Ігор Петрович










Харків 2025

ЗАВДАННЯ

     Результатом лабораторної роботи має бути робочий сайт з інтернет магазином. Він має складатися з таких розділів: сторінка товарів, сторінка «Кошик». Кожна сторінка має складатися з таких частин: «Шапка» сторінки, тіло сторінки, «Підвал» або Footer сторінки. 
     На сторінці товарів необхідно відобразити список доступних для покупки найменувань з можливістю вибрати кількість одиниць товарів і кнопкою «купити». Під час натискання на кнопку «купити», має відправлятися запит (відправка форми, методом POST) на сервер, де дані зберігаються в сесію. На сторінці «Кошик» необхідно відобразити список обраних користувачем товарів (які були збережені у сесію). Якщо ви ще не обрали жодного товару, то має бути відображений напис «Перейти до покупок» (посилання).

ХІД РОБОТИ
     Створюємо файл, у якому реалізовано простий інтернет-магазин на PHP. На початку коду відкривається сесія за допомогою функції session_start(), що дозволяє зберігати дані про вибрані користувачем товари між запитами.
     
      1. <?php
      2. session_start();

     Далі оголошується масив $itemsList, який є віртуальною базою товарів. Кожному товару призначено унікальний ідентифікатор, і до нього додаються назва (name) та вартість (cost).

      4. $itemsList = [
      5.     1 => ['name' => 'Avocado', 'cost' => 1.50],
      6.     2 => ['name' => 'Almond Milk', 'cost' => 3.20],
      7.     3 => ['name' => 'Greek Yogurt', 'cost' => 2.00],
      8.     4 => ['name' => 'Organic Honey', 'cost' => 5.75],
      9.     5 => ['name' => 'Black Coffee', 'cost' => 2.80],
      10.     6 => ['name' => 'Green Tea', 'cost' => 2.10],
      11.     7 => ['name' => 'Blueberry Muffin', 'cost' => 1.90],
      12.     8 => ['name' => 'Fresh Orange Juice', 'cost' => 3.50],
      13.     9 => ['name' => 'Dark Chocolate', 'cost' => 4.25],
      14.     10 => ['name' => 'Sparkling Water', 'cost' => 1.10],
      15. ];

	Після цього перевіряється, чи існує сесійний масив $_SESSION['cart']; якщо ні, він ініціалізується як порожній масив, у якому зберігатиметься інформація про товари, додані до кошика.

      18. if (!isset($_SESSION['cart'])) {
      19.     $_SESSION['cart'] = [];
      20. }
      
     Наступним кроком створюються дві допоміжні функції. Перша, addToCart($productId, $amount), відповідає за додавання товару до кошика: якщо товар уже є, то просто збільшується його кількість, інакше додається новий запис.
     
      22. function addToCart($productId, $amount) {
      23.     if ($amount <= 0) return;
      24.     if (isset($_SESSION['cart'][$productId])) {
      25.         $_SESSION['cart'][$productId] += $amount;
      26.     } else {
      27.         $_SESSION['cart'][$productId] = $amount;
      28.     }
      29. }
      
     Друга функція, removeFromCart($productId), дозволяє видалити товар з кошика.
      
      31. function removeFromCart($productId) {
      32.     if (isset($_SESSION['cart'][$productId])) {
      33.         unset($_SESSION['cart'][$productId]);
      34.     }
      35. }
      
     Далі йде обробка POST-запитів, які надходять при додаванні товарів до кошика. Якщо у запиті наявні ключ add_items та масив кількостей qtys, то кожна кількість перетворюється на ціле число, перевіряється на додатність, і для відповідного товару викликається функція addToCart().
      
      37. if ($_SERVER['REQUEST_METHOD'] === 'POST') {
      38.     if (isset($_POST['add_items']) && is_array($_POST['qtys'])) {
      39.         foreach ($_POST['qtys'] as $pid => $qty) {
      40.             $pid = (int)$pid;
      41.             $qty = (int)$qty;
      42.             if (array_key_exists($pid, $itemsList)) {
      43.                 addToCart($pid, $qty);
      44.             }
      45.         }
     
     Після цього користувача перенаправляють на сторінку з кошиком через header('Location: ?view=cart'), щоб уникнути повторного надсилання даних при оновленні сторінки.

      46.         header('Location: ?view=cart');
      47.         exit;
      48.     }
      49. }
     
     Окремо обробляється GET-запит із параметром remove, який відповідає за видалення товару з кошика. Якщо передано коректний ID товару, викликається removeFromCart, і також відбувається перенаправлення на кошик. Змінна $view визначає, яку частину інтерфейсу потрібно відобразити — головну сторінку, каталог або кошик — залежно від GET-параметра view.
     
      51. if (isset($_GET['remove'])) {
      52.     $removeId = (int)$_GET['remove'];
      53.     removeFromCart($removeId);
      54.     header('Location: ?view=cart');
      55.     exit;
      56. }
      57. 
      58. $view = $_GET['view'] ?? 'home';
      
     Далі формується HTML-структура сайту. Вона містить заголовок у <header> з назвою магазину, панель навігації у <nav>, де є три посилання: головна сторінка, каталог і кошик із відображенням загальної кількості товарів, які наразі є у кошику (дод. В.1). 
     Основний вміст розміщується у блоці <main>, де в залежності від значення $view відображається відповідна секція (дод. В.2). Якщо $view дорівнює 'home', виводиться привітання та посилання на каталог. Якщо 'products', відображається форма з усіма товарами. Кожен товар представлений у вигляді блоку з назвою, ціною, полем для введення кількості та кнопкою "Add", яка надсилає POST-запит. Якщо $view дорівнює 'cart', виводиться таблиця з усіма товарами в кошику, їх кількістю, ціною за одиницю, загальною вартістю за кожен товар і можливістю видалити кожен окремий товар через посилання. Після виведення всіх товарів рахується загальна сума, яка також відображається внизу таблиці. Якщо кошик порожній, показується повідомлення з пропозицією перейти до каталогу. Якщо параметр $view має некоректне значення або відсутній, виводиться повідомлення про помилку 404 з посиланням для повернення на головну сторінку.
     Таким чином, у межах одного PHP-файлу реалізовано базовий функціонал інтернет-магазину з каталогом, додаванням товарів до кошика, переглядом кошика та видаленням товарів без використання баз даних або складних фреймворків.
     
     













ВИСНОВОК
     У результаті виконання лабораторної роботи було створено простий вебсайт — інтернет-магазин, реалізований на мові програмування PHP. Під час роботи реалізовано основний функціонал, необхідний для взаємодії користувача з товарами: перегляд асортименту, додавання вибраних товарів до кошика, перегляд вмісту кошика, а також видалення окремих позицій. Для зберігання даних про вибрані товари було використано сесії PHP, що дозволяє зберігати інформацію між HTTP-запитами без застосування бази даних. Віртуальну базу товарів реалізовано у вигляді асоціативного масиву, кожен елемент якого містить унікальний ідентифікатор, назву та вартість товару. За допомогою допоміжних функцій було реалізовано механізм додавання та видалення товарів у кошику. Здійснено обробку POST-запитів для додавання товарів і GET-запитів для видалення. Відповідно до параметра view відбувається відображення головної сторінки, каталогу або кошика. У випадку некоректного параметра виводиться повідомлення про помилку 404. Таким чином, у межах одного PHP-файлу реалізовано повністю функціональний мінімальний інтернет-магазин без використання баз даних і складних фреймворків, що демонструє засвоєння основ серверної логіки, роботи з формами, сесіями та умовним виведенням контенту.
     
     
     
     
     
     
     
     
     
     
     
     
     





     

ДОДАТОК А
Посилання на YouTube
     Відеозапис презентації результатів лабораторної роботи: 
      https://youtu.be/2Z6JEvTpNkA
     00:00 Привітання 
     00:18 Запуск сесії 
     00:49 Створення масиву 
     01:16 Ініціалізація кошика 
     01:37 Функція додавання до кошика 
     02:09 Функція видалення з кошика 
     02:31 POST-запит 
     04:27 Видалення товару 
     05:27 HTML структура сайту
     06:37 Навігаційна панель 
     07:10 Основний вміст. Сторінки home, cart. products 
     10:27 Помилка 404, якщо view недійсне 1
     0:49 Footer 
     10:55 Результат
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
ДОДАТОК Б
     GitHub репозиторій: https://github.com/NureSamosvatovaAnastasiia/smp-pzpi-23-5-samosvatova-anastasiia/blob/main/Lab3/smp-pzpi-23-5-samosvatova-anastasiia-lab3/smp-pzpi-23-5-samosvatova-anastasiia-lab3-code.php
     
     
     
     
     
     
     
     
     

































ДОДАТОК В
Фрагмент програмного коду
     В.1 HTML-структура сторінки
      60. ?>
      61. <!DOCTYPE html>
      62. <html lang="en">
      63. <head>
      64. <meta charset="UTF-8" />
      65. <meta name="viewport" content="width=device-width, initial-scale=1" />
      66. <title>Simple Shop</title>
      67. <style>
      68.   body {
      69.     margin: 0; padding: 0;
      70.     font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      71.     background: #1f1f1f;
      72.     color: #eee;
      73.     display: flex;
      74.     flex-direction: column;
      75.     min-height: 100vh;
      76.   }
      77.   header, footer {
      78.     background: #111;
      79.     padding: 20px;
      80.     text-align: center;
      81.     font-size: 24px;
      82.     font-weight: 700;
      83.     letter-spacing: 2px;
      84.     box-shadow: 0 2px 10px #000;
      85.   }
      86.   nav {
      87.     display: flex;
      88.     justify-content: center;
      89.     gap: 30px;
      90.     background: #222;
      91.     padding: 15px 0;
      92.   }
      93.   nav a {
      94.     color: #aaa;
      95.     text-decoration: none;
      96.     font-weight: 600;
      97.     font-size: 18px;
      98.   }
      99.   nav a.active, nav a:hover {
      100.     color: #4caf50;
      101.     text-decoration: underline;
      102.   }
      103.   main {
      104.     max-width: 800px;
      105.     margin: 30px auto;
      106.     background: #2c2c2c;
      107.     padding: 30px;
      108.     border-radius: 12px;
      109.     box-shadow: 0 0 15px #000;
      110.     flex-grow: 1;
      111.   }
      112.   h1,h2 {
      113.     text-align: center;
      114.     margin-bottom: 30px;
      115.   }
      116.   /* Catalog vertical list */
      117.   .products-list {
      118.     display: flex;
      119.     flex-direction: column;
      120.     gap: 20px;
      121.   }
      122.   .product-item {
      123.     background: #3a3a3a;
      124.     border-radius: 10px;
      125.     padding: 20px;
      126.     box-shadow: 0 0 8px #111;
      127.     display: flex;
      128.     justify-content: space-between;
      129.     align-items: center;
      130.   }
      131.   .product-info {
      132.     display: flex;
      133.     flex-direction: column;
      134.   }
      135.   .product-name {
      136.     font-weight: 700;
      137.     margin-right: 10px;
      138.     font-size: 20px;
      139.   }
      140.   .product-price {
      141.     font-size: 18px;
      142.     color: #8fbc8f;
      143.   }
      144.   .product-qty {
      145.     width: 60px;
      146.     padding: 6px;
      147.     font-size: 16px;
      148.     border-radius: 6px;
      149.     border: none;
      150.     margin-right: 15px;
      151.   }
      152.   .add-button {
      153.     background-color: #4caf50;
      154.     border: none;
      155.     padding: 10px 20px;
      156.     color: #eee;
      157.     font-weight: 700;
      158.     font-size: 16px;
      159.     border-radius: 8px;
      160.     cursor: pointer;
      161.     transition: background-color 0.25s ease;
      162.   }
      163.   .add-button:hover {
      164.     background-color: #369636;
      165.   }
      166.   /* Cart table */
      167.   table {
      168.     width: 100%;
      169.     border-collapse: collapse;
      170.     background: #3a3a3a;
      171.     border-radius: 10px;
      172.     overflow: hidden;
      173.     box-shadow: 0 0 10px #000;
      174.   }
      175.   th, td {
      176.     padding: 15px 10px;
      177.     text-align: center;
      178.   }
      179.   th {
      180.     background: #4caf50;
      181.     color: #fff;
      182.   }
      183.   tr:nth-child(even) {
      184.     background: #2c2c2c;
      185.   }
      186.   a.remove-link {
      187.     color: #f44336;
      188.     font-weight: 700;
      189.     text-decoration: none;
      190.   }
      191.   a.remove-link:hover {
      192.     text-decoration: underline;
      193.   }
      194.   .empty-cart {
      195.     text-align: center;
      196.     font-size: 22px;
      197.     padding: 60px 0;
      198.     color: #bbb;
      199.   }
      200. </style>
      201. </head>
      202. <body>
      
     В.2 Фрагменту коду всередині тегу <main>
      211. <main>
      212. 
      213. <?php if ($view === 'home'): ?>
      214.     <h1>Welcome to Simple PHP Shop!</h1>
      215.     <p style="text-align:center; font-size: 18px; color:#aaa;">Check out our <a href="?view=products" style="color:#4caf50;">product catalog</a> and add items to your basket!</p>
      216. 
      217. <?php elseif ($view === 'products'): ?>
      218.     <h2>Product Catalog</h2>
      219.     <form method="post" action="?view=products">
      220.         <div class="products-list">
      221.         <?php foreach ($itemsList as $id => $product): ?>
      222.             <div class="product-item">
      223.                 <div class="product-info">
      224.                     <div class="product-name"><?= htmlspecialchars($product['name']) ?></div>
      225.                     <div class="product-price">$<?= number_format($product['cost'], 2) ?></div>
      226.                 </div>
      227.                 <div>
      228.                     <input type="number" name="qtys[<?= $id ?>]" class="product-qty" min="0" value="0" aria-label="Quantity for <?= htmlspecialchars($product['name']) ?>" />
      229.                     <button type="submit" name="add_items" class="add-button" value="1">Add</button>
      230.                 </div>
      231.             </div>
      232.         <?php endforeach; ?>
      233.         </div>
      234.     </form>
      235. 
      236. <?php elseif ($view === 'cart'): ?>
      237.     <h2>Your Basket</h2>
      238.     <?php if (!empty($_SESSION['cart'])): ?>
      239.         <table>
      240.             <thead>
      241.                 <tr>
      242.                     <th>Product</th>
      243.                     <th>Unit Price</th>
      244.                     <th>Quantity</th>
      245.                     <th>Sum</th>
      246.                     <th>Remove</th>
      247.                 </tr>
      248.             </thead>
      249.             <tbody>
      250.             <?php
      251.                 $totalSum = 0;
      252.                 foreach ($_SESSION['cart'] as $pid => $qty):
      253.                     $prod = $itemsList[$pid];
      254.                     $lineTotal = $prod['cost'] * $qty;
      255.                     $totalSum += $lineTotal;
      256.             ?>
      257.                 <tr>
      258.                     <td><?= htmlspecialchars($prod['name']) ?></td>
      259.                     <td>$<?= number_format($prod['cost'], 2) ?></td>
      260.                     <td><?= $qty ?></td>
      261.                     <td>$<?= number_format($lineTotal, 2) ?></td>
      262.                     <td><a href="?view=cart&remove=<?= $pid ?>" class="remove-link" title="Remove <?= htmlspecialchars($prod['name']) ?>">X</a></td>
      263.                 </tr>
      264.             <?php endforeach; ?>
      265.                 <tr>
      266.                     <th colspan="3" style="text-align:right;">Total:</th>
      267.                     <th colspan="2">$<?= number_format($totalSum, 2) ?></th>
      268.                 </tr>
      269.             </tbody>
      270.         </table>
      271.     <?php else: ?>
      272.         <p class="empty-cart">Your basket is empty. Visit the <a href="?view=products" style="color:#4caf50;">catalog</a> to add items.</p>
      273.     <?php endif; ?>
      274. 
      275. <?php else: ?>
      276.     <h1>404 — Not Found</h1>
      277.     <p style="text-align:center;"><a href="?view=home" style="color:#4caf50;">Return Home</a></p>
      278. <?php endif; ?>
      279. 
      280. </main>
2


